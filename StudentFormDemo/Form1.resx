<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>